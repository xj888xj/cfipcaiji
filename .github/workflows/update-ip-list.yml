name: Update IP List AI

on:
  schedule:
    - cron: '0 */4 * * *' # 每4小时运行一次
  workflow_dispatch: # 允许手动触发
  #push: # 允许提交触发

jobs:
  update-ip-list:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4
        
    - name: Run IP collection script
      run: |
        python << EOF
        import requests
        from bs4 import BeautifulSoup
        import re
        from concurrent.futures import ThreadPoolExecutor, as_completed

        # 目标URL列表
        urls = [
            'https://www.182682.xyz/page/cloudflare/ipv4.html', 
            'https://ip.164746.xyz',
            'https://cf.090227.xyz/'
        ]

        # 正则表达式用于匹配IP地址
        ip_pattern = re.compile(r'\b(?:[0-9]{1,3}\.){3}[0-9]{1,3}\b')

        def fetch_ips(url):
            try:
                response = requests.get(url, timeout=10)
                response.raise_for_status()
                soup = BeautifulSoup(response.text, 'html.parser')
                
                if url in ['https://ip.164746.xyz', 'https://www.182682.xyz/page/cloudflare/ipv4.html', 'https://cf.090227.xyz/']:
                    elements = soup.find_all('tr')
                else:
                    elements = soup.find_all('li')
                
                return set(ip for element in elements for ip in ip_pattern.findall(element.get_text()))
            except Exception as e:
                print(f"Error fetching from {url}: {e}")
                return set()

        def main():
            all_ips = set()
            
            with ThreadPoolExecutor(max_workers=len(urls)) as executor:
                future_to_url = {executor.submit(fetch_ips, url): url for url in urls}
                for future in as_completed(future_to_url):
                    all_ips.update(future.result())
            
            with open('ip.txt', 'w') as file:
                for ip in sorted(all_ips):
                    file.write(f"{ip}\n")
            
            print(f'已保存 {len(all_ips)} 个唯一IP地址到ip.txt文件中。')

        if __name__ == "__main__":
            main()
        EOF
        
    - name: Commit and push changes
      run: |
        git config --global user.email "tianshideyou@proton.me"
        git config --global user.name "tianshipapa"
        git add ip.txt
        git diff --quiet && git diff --staged --quiet || (git commit -m "Automatic update" && git push)